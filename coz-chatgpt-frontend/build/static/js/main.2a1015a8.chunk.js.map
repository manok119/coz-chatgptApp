{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["API_GATEWAY_ID","process","SOCKET_API_GATEWAY_ID","App","props","closeWebSocket","timer","clearInterval","websocket","close","connectToWebScoket","address","WebSocket","onopen","setInterval","send","JSON","stringify","message","onmessage","obj","parse","data","onMessageReceived","onclose","event","console","log","onerror","error","componentDidMount","state","axios","method","url","params","room_id","result","setState","set","moment","valueOf","timestamp","list","get","push","onSend","text","user_id","name","getMessageList","userId","messageList","dt","forEach","model","sentTime","sender","direction","Map","messages","undefined","style","position","height","this","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a1015a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\nimport axios from 'axios';\r\nimport {\r\n  MainContainer,\r\n  ChatContainer,\r\n  MessageList,\r\n  Message,\r\n  MessageInput,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport { Map, List, Record } from 'immutable';\r\nimport moment from 'moment';\r\n\r\nconst API_GATEWAY_ID = process.env.REACT_APP_API_PATH ? process.env.REACT_APP_API_PATH : \"5yfk3miht8\"\r\nconst SOCKET_API_GATEWAY_ID = process.env.REACT_APP_SOCKET_API_PATH ? process.env.REACT_APP_SOCKET_API_PATH : \"test\"\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: Map(\r\n        {\r\n          messageList: [],\r\n          messages: []\r\n        })\r\n    }\r\n    this.websocket = undefined;\r\n    this.timer = undefined;\r\n  }\r\n  closeWebSocket = () => {\r\n\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n    if (this.websocket) {\r\n      this.websocket.close();\r\n      this.websocket = null;\r\n    }\r\n  }\r\n  connectToWebScoket = () => {\r\n    const address = `wss://${SOCKET_API_GATEWAY_ID}.execute-api.ap-northeast-2.amazonaws.com/dev?user_id=test&room_id=test`\r\n    this.websocket = new WebSocket(address);\r\n    this.websocket.onopen = () => {\r\n      this.timer = setInterval(() => {\r\n        this.websocket.send(JSON.stringify({ message: 'ping' }));\r\n      }, 60 * 1000);\r\n    };\r\n    this.websocket.onmessage = (message) => {\r\n      let obj = JSON.parse(message.data);\r\n      this.onMessageReceived(obj);\r\n    };\r\n\r\n    this.websocket.onclose = (event) => {\r\n      console.log('onclose');\r\n      if (this.timer || this.websocket) this.closeWebSocket();\r\n    };\r\n\r\n    this.websocket.onerror = (event) => {\r\n      console.error('WebSocket error observed:', event);\r\n      if (this.timer || this.websocket) this.closeWebSocket();\r\n    };\r\n  }\r\n  componentDidMount = async () => {\r\n    const { data } = this.state;\r\n    const result = await axios({\r\n      method: 'GET',\r\n      url: `https://${API_GATEWAY_ID}.execute-api.ap-northeast-2.amazonaws.com/dev/chat`,\r\n      params: {\r\n        room_id: \"test\"\r\n      }\r\n    });;\r\n\r\n    this.setState({\r\n      data: data.set(\"messages\", result.data).set(\"user_id\", moment().valueOf())\r\n    })\r\n\r\n    this.connectToWebScoket();\r\n  }\r\n  onMessageReceived = async (message) => {\r\n    console.log(message)\r\n    if (message.timestamp) {\r\n      const { data } = this.state;\r\n      let list = data.get(\"messages\");\r\n      list.push(message)\r\n      console.log(list);\r\n      this.setState({\r\n        data: data.set(\"messages\", list)\r\n      })\r\n    }\r\n  }\r\n  onSend = async (message) => {\r\n    const { data } = this.state;\r\n    const result = await axios({\r\n      method: 'PUT',\r\n      url: `https://${API_GATEWAY_ID}.execute-api.ap-northeast-2.amazonaws.com/dev/chat`,\r\n      data: {\r\n        room_id: \"test\",\r\n        text: message,\r\n        user_id: data.get(\"user_id\"),\r\n        name: \"name_test\"\r\n\r\n      }\r\n    });;\r\n  }\r\n  getMessageList = () => {\r\n    const { data } = this.state;\r\n    const userId = data.get(\"user_id\");\r\n    let messageList = [];\r\n    const dt = data.get(\"messages\");\r\n    if (dt) {\r\n      dt.forEach((message) => {\r\n        messageList.push(<Message\r\n          key={message.timestamp}\r\n          model={{\r\n            message: message.message,\r\n            sentTime: \"just now\",\r\n            sender: \"Joe\",\r\n            direction: (userId == message.user_id) ? \"outgoing\" : \"not\",\r\n          }}\r\n        />\r\n        );\r\n      })\r\n    }\r\n    return messageList;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\", height: \"500px\" }}>\r\n        <MainContainer>\r\n          <ChatContainer>\r\n            <MessageList>\r\n              {this.getMessageList()}\r\n            </MessageList>\r\n            <MessageInput placeholder=\"Type message here\" onSend={this.onSend} />\r\n          </ChatContainer>\r\n        </MainContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}